/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package graphicalInterfaces;

import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Ophiran
 */
public class GameBoard extends javax.swing.JPanel {

    public final int WHITE_PIECE = 1;
    public final int BLACK_PIECE = 2;
    
    private BufferedImage whitePiece;
    private BufferedImage blackPiece;
    private BufferedImage boardComplete;
    private BufferedImage board;
    private BufferedImage winImage;
    
    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
        loadImages();
        jLabel1.setIcon(new ImageIcon(boardComplete));
        initBoard();
    }

    //Method using pixels positions
    private BufferedImage addImage(BufferedImage img1,BufferedImage img2,int posX,int posY){
        Graphics2D g2d = img1.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
        g2d.drawImage(img2, posX, posY, null);
        return img1;
    }
    
    public JLabel getBoard(){
        return jLabel1;
    }
    
    private final void loadImages(){
        try{
            boardComplete = ImageIO.read(this.getClass().getResourceAsStream("/ressources/board.jpg"));
            board = ImageIO.read(this.getClass().getResourceAsStream("/ressources/board.jpg"));
            whitePiece = ImageIO.read(this.getClass().getResourceAsStream("/ressources/whitePiece.png"));
            blackPiece = ImageIO.read(this.getClass().getResourceAsStream("/ressources/blackPiece.png"));
            winImage = ImageIO.read(this.getClass().getResourceAsStream("/ressources/youWin.png"));
        } catch(IOException ex){
            Logger.getLogger(GameBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void hasWon(boolean winner) {
        if(winner) {
            boardComplete = addImage(boardComplete,winImage,0,0);
        }
    }
    
    public final void initBoard(){
        boardComplete.setData(board.getData());
    }
    
    public int getBoardX(int pixelX){
        float caseWidth = board.getWidth()/8;
        return (int)(pixelX/caseWidth);
    }
    
    public int getBoardY(int pixelY){
        float caseHeight = board.getHeight()/8;
        return (int)(pixelY/caseHeight);
    }
    
    //Use board positioning
    public void placePiece(int boardX, int boardY,int pieceType){
        int caseWidth = board.getWidth()/8;
        int caseHeight = board.getHeight()/8;
        int pieceWidth = whitePiece.getWidth();
        int pieceHeight = whitePiece.getHeight();
        int offSetX = (caseWidth - pieceWidth) / 2 + 2;
        int offSetY = (caseHeight - pieceHeight) /2 + 3;
        if(pieceType == WHITE_PIECE){
            boardComplete = addImage(boardComplete, whitePiece, caseWidth*boardX+offSetX, caseHeight*boardY+offSetY);
        }
        else if (pieceType == BLACK_PIECE){
            boardComplete = addImage(boardComplete, blackPiece, caseWidth*boardX+offSetX, caseHeight*boardY+offSetY);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setMaximumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
